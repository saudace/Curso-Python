# -*- coding: utf-8 -*-
"""integrales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sE_CNF3WXTWnGP9AzHeCiBBvqSoFeeEe
"""

from sympy import symbols, diff, ln, exp
x = symbols('x')
#pk =
diff(ln(4**((7*x**2))/(5*exp(3*x**5))), x)
#pk.subs(x, 1.1).evalf()
#print(pk)

from sympy import symbols, integrate, sin, exp
x = symbols('x')
integrate(sin(x), x)

from sympy import symbols, integrate, sin, exp
from sympy.plotting import plot
x = symbols('x')
integrate(sin(x), x,(x, -1,1))
plot(sin(x), (x,-1,1))

from sympy import symbols, integrate, sqrt
from sympy.plotting import plot
x = symbols('x')
integrate((1-x)/sqrt(2-x), x) #,(x, -1,1))
#plot((1-x)/sqrt(2-x), (x,-1,1))

import numpy as np
import matplotlib.pyplot as pl

paso = 0.1
p = np.arange(-1,1,paso)

ft = np.sin(np.sqrt(3)*p)*np.tan(p)

pl.plot(p,ft, 'r')
pl.fill_between(p,ft,color=(1,.616,0,.459))
pl.title("sin[[3^(1/2)t]tan[t]")
pl.show()

AreaFt = np.sum(paso*ft)

print("El Ã¡rea bajo la curva es:", AreaFt)